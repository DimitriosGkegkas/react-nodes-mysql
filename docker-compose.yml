version: '3.8'

services:
  nginx:
    depends_on:
      - backend
      - frontend
    image: nginx:latest
    container_name: nginx-proxy
    restart: on-failure
    ports:
      # - 80:80
      # - 443:443
      - $PORT:80
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
      # - ./proxy/certs:/etc/nginx/certs
    links:
      - backend
      - frontend
    networks:
      - backend
      - frontend

  mysqldb:
    image: mysql:8.0
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$DB_PASSWORD
      - MYSQL_DATABASE=$DB_NAME
    volumes:
      - db:/var/lib/mysql
    networks:
      - backend
  
  
  backend:
    depends_on:
      - mysqldb
    links:
      - mysqldb
    restart: on-failure
    build: ./backend
    env_file: ./.env
    volumes:
      - ./backend/src:/backend/src
    command: npm run start
    environment:
      - DB_HOST=mysqldb
      - DB_PORT=3306
      - DB_USER=$DB_USER
      - DB_PASSWORD=$DB_PASSWORD
      - DB_NAME=$DB_NAME
    networks:
      - backend
      - frontend
    

  frontend:
    depends_on:
      - backend
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - REACT_APP_API_BASE_URL=$BASE_URL
    volumes:
      - ./frontend/src:/frontend/src
    networks:
      - frontend  
    environment:
       - CHOKIDAR_USEPOLLING=true

volumes: 
  db:

networks:
  mysqldb:
  backend:
  frontend: